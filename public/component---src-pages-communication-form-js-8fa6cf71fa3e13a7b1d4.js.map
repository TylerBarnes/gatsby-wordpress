{"version":3,"sources":["webpack:///./components/parts/MobileHr.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./components/content-blocks/StyledCommunicationForm.js","webpack:///./components/content-blocks/CommunicationForm.js","webpack:///./src/pages/communicationForm.js","webpack:///./components/page-sections/GenericPageSection.js"],"names":["MobileHr","styled","hr","size","laptopS","_assertThisInitialized","self","ReferenceError","StyledCommunicationForm","div","sizes","s32","fonts","eaves","s36","colors","titleColor","breakpoints","tabletS","s42","s24","bgRed","s8","mixins","buttons","s58","ActiveCommunicationForm","props","handleBlur","field","evt","setState","touched","state","handleNameChange","val","validateName","validateEmail","validationField","nameValid","errorString","test","console","log","validateForm","length","match","firstnameValid","lastnameValid","emailValid","postalcodeValid","formValid","handleFirstnameChange","firstname","target","value","handleLastnameChange","lastname","handleEmailChange","email","handlePostalcodeChange","postalcode","shouldShowForm","formIsValid","status","valid","handleSubmit","canBeSubmitted","preventDefault","alert","errors","Object","keys","some","x","errorMsg","gnameValid","bind","componentDidUpdate","prevProps","prevState","this","render","PageSection","preheading","topBorder","onSubmit","htmlFor","type","onKeyPress","onChange","onBlur","name","id","placeholder","className","disabled","Component","pad","StyledGenericPageSection","children","classes"],"mappings":"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","file":"component---src-pages-communication-form-js-8fa6cf71fa3e13a7b1d4.js","sourcesContent":["import styled from 'styled-components'\nimport { size } from '../css-variables'\n\n/* this just renders an <hr> element that is 655px long, for a visual cue on where the mobile breakpoint is. */\nconst MobileHr = styled.hr`\nwidth: ${size.laptopS};\nmargin-bottom: 0;\n\n`\nexport default MobileHr","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","\nimport React from 'react'\nimport styled from 'styled-components'\nimport { breakpoints, fonts, sizes, colors, mixins } from '../css-variables'\n\nconst StyledCommunicationForm = styled.div`\nwidth: 100%;\nmargin: 0 auto;\npadding: 0 ${sizes.s32};    \nmax-width: 528px;\nfont-family: ${fonts.eaves};\nfont-size: ${sizes.s36};\ncolor: ${colors.titleColor};\nfont-weight: bold;\nfont-style: italic;\ntext-align: center;\n@media screen and ${breakpoints.tabletS} {\n    font-size: ${sizes.s42};\n}\nlabel { \n    display: block;\n    margin-bottom: ${sizes.s24};\n    @media screen and ${breakpoints.tabletS} {\n        margin-bottom: ${sizes.s32};\n    }\n}\n\ninput {\n    display: block;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid ${colors.bgRed};\n    text-align: center;\n    padding-bottom: ${sizes.s8};\n    margin-bottom: ${sizes.s32};\n}\ninput[type=\"submit\"] {\n    ${mixins.buttons};\n    margin-top: ${sizes.s58};\n    &:first-of-type {\n        margin-top: ${sizes.s58};\n    }\n    &:disabled {\n        color: grey;\n    }\n}\n\n\nfieldset {\n    border: none;\n    &.hiddenfields {\n        display: none;\n    }\n    &.active {\n       \n        animation: fadeIn ease 1.5s;\n    }\n}\n\n@keyframes fadeIn {\n    0% {\n        opacity:0;\n        visibility: hidden;\n    }\n    100% {\n        opacity:1;\n        visibility: visible;\n    }\n\n}\n\n\n`\nexport default StyledCommunicationForm\n\n","import React, { Component } from 'react'\nimport PageSection from \"../page-sections/PageSection\"\nimport StyledCommunicationForm from \"./StyledCommunicationForm\"\n\n\n\nfunction validate(firstname, lastname, email, postalcode) {\n    // true means invalid, so our conditions got reversed\n    return {\n        firstname: firstname.length === 0,\n        lastname: lastname.length === 0,\n        email: email.length === 0,\n        postalcode: postalcode.length === 0\n    };\n}\n\nexport default class ActiveCommunicationForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email: '',\n            postalcode: '',\n            errorMsg: {},\n            touched: {\n                firstname: false,\n                lastname: false,\n                email: false,\n                postalcode: false,\n            },\n           \n            firstnameValid: false,\n            lastnameValid: false,\n            emailValid: false, \n            postalcodeValid: false,\n            gnameValid: false,\n            formValid: false,\n\n        }\n        this.shouldShowForm = this.shouldShowForm.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n\n    }\n    componentDidUpdate(prevProps, prevState) {\n        console.log('did update: ', this.state)\n\n        if ( this.state.firstname && prevState.firstname !== this.state.firstname) {\n            console.log('validating firstname because ', prevState.firstname, '...', this.props.firstname)\n            this.validateName('firstname', 'firstnameValid')\n        }\n        if (this.state.lastname && prevState.lastname !== this.state.lastname) {\n            console.log('validating lastname because ', prevState.lastname, '...', this.props.lastname)\n\n            this.validateName('lastname', 'lastnameValid')\n        }\n        if (this.state.email && prevState.email !== this.state.email) {\n            console.log('validating email because ', prevState.email, '...', this.props.email)\n\n\n            this.validateEmail('email', 'emailValid')\n        }\n        if (this.state.postalcode && prevState.postalcode !== this.state.postalcode) {\n            console.log('validating postalcode')\n            console.log('validating postalcode because ', prevState.postalcode, '...', this.props.postalcode)\n\n            this.validateName('postalcode', 'postalcodeValid')\n        }\n        \n    }\n   \n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        })\n    }\n    handleNameChange = (field, val) => {\n        this.setState({ ...this.state, [field]: val},\n           this.validateName(field, val)\n        );\n        //console.log('handleNameChange results: ', this.state)\n    \n    }\n    validateEmail = (field, validationField) => {\n        const val = this.state[field]\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        let nameValid = true\n        let errorString = ''\n        if( !re.test(val)) {\n            nameValid = false;\n            errorString = ('Email validation failed.')\n        }\n        console.log('errorMsg: ', errorString)\n        \n\n        console.log(field, '  valid? ', nameValid)\n        \n        console.log('valid by fieldname (', validationField, '): ', this.state[validationField])\n        \n        this.setState({[validationField]: nameValid }, this.validateForm)\n    }\n    \n    validateName = (field, validationField)  => {\n        const val = this.state[field]\n        console.log('validateName got this value from saved state for ' , field , ': ', val)\n        const touched = this.state.touched[field]\n        console.log('field: ', field,  ', touched: ', touched, 'new val: ', val)\n\n        let nameValid = true\n        var letters = /^[A-Za-z @-]+$/;\n        let errorString = ''\n        \n       \n        if (val.length < 2) {\n            console.log(\"too short\")\n            nameValid = false\n            errorString = ('Must be at least 2 characters long')\n        }\n        if(!val.match(letters)) {\n            console.log(\"bad char found\")\n            nameValid = false;\n            errorString = ('Only letters, spaces and hyphens are allowed.')\n           \n        }\n        \n        console.log('errorMsg: ', errorString)\n        \n\n        console.log(field, '  valid? ', nameValid)\n        \n        console.log('valid by fieldname (', validationField, '): ', this.state[validationField])\n        \n        this.setState({[validationField]: nameValid }, this.validateForm)\n       /* this.setState(prevState => ({\n            valid: { \n                ...prevState.valid,\n                [field]: nameValid \n            }\n        }\n        ), this.validateForm\n        )*/\n    }\n    validateForm = () => {\n        const {firstnameValid, lastnameValid, emailValid, postalcodeValid } = this.state;\n        console.log('firstname valid: ', firstnameValid, ', lastname valid: ', lastnameValid);\n        console.log('are all fields valid? ', firstnameValid && lastnameValid)\n        this.setState({\n            formValid: firstnameValid && lastnameValid && emailValid && postalcodeValid\n        })\n    }\n    /* REMOVE */\n    handleFirstnameChange = evt => {\n        this.setState({ firstname: evt.target.value }\n        );\n        \n    };\n    /* REMOVE */\n    handleLastnameChange = evt => {\n        this.setState({ lastname: evt.target.value });\n        \n    };\n    /* ADD VALIDATION */\n    handleEmailChange = evt => {\n        this.setState({ email: evt.target.value });\n        // just for now\n        \n    };\n    /* ADD VALIDATION */\n    handlePostalcodeChange = evt => {\n        this.setState({ postalcode: evt.target.value });\n        // just for now\n        \n    };\n\n    /* Show the rest of the form if user has started typing in FirstName */\n    shouldShowForm = () => {\n        return (this.state.firstname.length > 1)\n    }\n    formIsValid = () => {\n        const status = (this.valid.firstname && this.valid.lastname)\n        console.log('formIsValid: ', status)\n        return status\n    \n    }\n\n    handleSubmit = evt => {\n        if (!this.canBeSubmitted()) {\n            console.log('no.')\n          evt.preventDefault();\n          return;\n        }\n        const { firstname, lastname, email, postalcode } = this.state;\n        alert(`Signed up with firstname: ${firstname}, lastname: ${lastname}, email: ${email}, postalcode: ${postalcode}`);\n      }\n\n    canBeSubmitted = () => {\n        const errors = validate(this.state.firstname, this.state.lastname, this.state.email, this.state.postalcode);\n        const isDisabled = Object.keys(errors).some(x => errors[x])\n        return !isDisabled\n    }\n    \n    render () {\n       \n        return (\n            <PageSection preheading=\"Sign up for WAA Communications\" topBorder >\n                <StyledCommunicationForm>\n                <form onSubmit={this.handleSubmit}>\n                    <fieldset>\n                        <label htmlFor=\"firstname\">My name is</label>\n                        <input \n                            type=\"text\" \n                            onKeyPress={this.shouldShowForm}\n                            onChange={this.handleFirstnameChange} \n                            onBlur={this.handleBlur('firstname')}\n                            value={this.state.firstname} \n                            name=\"firstname\" \n                            id=\"firstname\" \n                            placeholder=\"First Name\" />\n                    </fieldset>\n                    <fieldset className={this.shouldShowForm() ? \"active\" : \"hiddenfields\"} id=\"hiddenfields\">\n                        <input \n                            type=\"text\" \n                            name=\"lastname\" \n                            id=\"lastname\" \n                            placeholder=\"Last Name\"  \n                            value={this.state.lastname}                          \n                            onChange={this.handleLastnameChange} \n                            onBlur={this.handleBlur('lastname')}\n                        />\n                        <label htmlFor=\"emailaddress\">My email is</label>\n                        <input type=\"email\" name=\"emailaddress\" id=\"emailaddress\" placeholder=\"Email\"  value={this.state.email}  onChange={this.handleEmailChange} />\n                        <label htmlFor=\"postalcode\">My postal code is</label>\n                        <input type=\"text\" name=\"postalcode\" id=\"postalcode\" placeholder=\"postal code\"  value={this.state.postalcode}  onChange={this.handlePostalcodeChange}/>\n                    </fieldset>\n\n                        <div className=\"label\">and I Badger On.</div>\n                    <fieldset className={this.shouldShowForm() ? \"active\" : \"hiddenfields\"}>    \n                        <input type=\"submit\" name=\"submitbutton\" id=\"submitbutton\" \n                        value=\"SUBMIT\"  disabled={!this.state.formValid} \n                         />\n                    </fieldset>\n                   \n                </form>\n                </StyledCommunicationForm>\n            </PageSection>\n        )\n    }\n}","import React from \"react\"\nimport Layout from \"../../components/Layout\"\nimport CommunicationForm from \"../../components/content-blocks/CommunicationForm\"\nimport GenericPageSection from '../../components/page-sections/GenericPageSection'\nimport MobileHr from '../../components/parts/MobileHr'\n\nexport default () => {\n    return (\n<Layout>\n    <GenericPageSection>\n        <MobileHr />\n    </GenericPageSection>\n    <GenericPageSection pad>\n        <h1>Communication Form</h1>\n        \n        <h2>Done so far:</h2>\n        <p>After typing two characters into the First Name field, the rest of the form will reveal itself.</p>\n        <p>After all fields have been entered (which currently means at least 2 characters in each field), the submit button will become active.<br/>\n        <strong>NOTE: use letters for the postal code field for now (proper validation to come later)</strong></p>\n        <h2>Not done yet:</h2>\n        <ul>\n            <li>Proper validation of all fields based on specific rules</li>\n            <li>Display of form validation messages</li>\n            <li>Addition of country dropdown, country/postal code interaction</li>\n        </ul>\n    </GenericPageSection>\n\n        \n    <CommunicationForm />\n    <GenericPageSection>\n        <MobileHr />\n    </GenericPageSection>\n   \n  \n   \n    \n</Layout>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nconst GenericPageSection = ({className, pad, children}) => {\n    const classes = pad ? `${className} ${className}--pad` : className\n    return (\n        <div className={classes}>\n            {children}\n        </div>\n    )\n\n}\n\nconst StyledGenericPageSection = styled(GenericPageSection)`\nbackground-color: pink;\n&--pad {\n    padding: 30px;\n}\n\n`\n\nexport default StyledGenericPageSection"],"sourceRoot":""}